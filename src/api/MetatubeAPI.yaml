openapi: 3.0.3
info:
  title: Metatube API
  version: 1.0.0
  description: Servicio interno de metatube que contiene herramientas de analisis
    de videos.
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/AI/extract_sentiment/:
    post:
      operationId: AI_extract_sentiment_create
      parameters:
      - in: query
        name: text
        schema:
          type: string
        description: texto a analizar
        required: true
      tags:
      - AI
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/AI/get_related_searchs/:
    post:
      operationId: AI_get_related_searchs_create
      parameters:
      - in: query
        name: keywords
        schema:
          type: string
        description: comma separated values
        required: true
      tags:
      - AI
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/AI/get_related_topics/:
    post:
      operationId: AI_get_related_topics_create
      parameters:
      - in: query
        name: keywords
        schema:
          type: string
        description: comma separated values
        required: true
      tags:
      - AI
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/AI/get_trend_data/:
    post:
      operationId: AI_get_trend_data_create
      parameters:
      - in: query
        name: keywords
        schema:
          type: string
        description: comma separated values
        required: true
      - in: query
        name: timePeriod
        schema:
          type: string
          enum:
          - now 1-H
          - now 1-d
          - now 4-H
          - now 7-d
          - today 1-m
          - today 12-m
          - today 3-m
          - today 5-y
          default: now 1-d
      tags:
      - AI
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/AI/get_trending_searchs/:
    post:
      operationId: AI_get_trending_searchs_create
      tags:
      - AI
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/AI/mejor_dia_publicar/:
    post:
      operationId: AI_mejor_dia_publicar_create
      parameters:
      - in: query
        name: channelid
        schema:
          type: string
        description: channel id
        required: true
      tags:
      - AI
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/channel/:
    get:
      operationId: channel_list
      tags:
      - channel
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
          description: ''
    post:
      operationId: channel_create
      tags:
      - channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/v1/channel/{id}/:
    get:
      operationId: channel_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this canal.
        required: true
      tags:
      - channel
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    put:
      operationId: channel_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this canal.
        required: true
      tags:
      - channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Channel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    patch:
      operationId: channel_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this canal.
        required: true
      tags:
      - channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChannel'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
    delete:
      operationId: channel_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this canal.
        required: true
      tags:
      - channel
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/comments/:
    get:
      operationId: comments_list
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: comments_create
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/v1/comments/{id}/:
    get:
      operationId: comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - comments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - comments
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/keyWord/:
    get:
      operationId: keyWord_list
      tags:
      - keyWord
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/KeyWord'
          description: ''
    post:
      operationId: keyWord_create
      tags:
      - keyWord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyWord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyWord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KeyWord'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyWord'
          description: ''
  /api/v1/keyWord/{keyword}/:
    get:
      operationId: keyWord_retrieve
      parameters:
      - in: path
        name: keyword
        schema:
          type: string
        description: A unique value identifying this key word.
        required: true
      tags:
      - keyWord
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyWord'
          description: ''
    put:
      operationId: keyWord_update
      parameters:
      - in: path
        name: keyword
        schema:
          type: string
        description: A unique value identifying this key word.
        required: true
      tags:
      - keyWord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyWord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyWord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KeyWord'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyWord'
          description: ''
    patch:
      operationId: keyWord_partial_update
      parameters:
      - in: path
        name: keyword
        schema:
          type: string
        description: A unique value identifying this key word.
        required: true
      tags:
      - keyWord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKeyWord'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKeyWord'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKeyWord'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyWord'
          description: ''
    delete:
      operationId: keyWord_destroy
      parameters:
      - in: path
        name: keyword
        schema:
          type: string
        description: A unique value identifying this key word.
        required: true
      tags:
      - keyWord
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/proyectos/:
    get:
      operationId: proyectos_list
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - proyectos
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proyecto'
          description: ''
    post:
      operationId: proyectos_create
      description: API endpoint that allows groups to be viewed or edited.
      tags:
      - proyectos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proyecto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proyecto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Proyecto'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proyecto'
          description: ''
  /api/v1/proyectos/{id}/:
    get:
      operationId: proyectos_retrieve
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this proyecto.
        required: true
      tags:
      - proyectos
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proyecto'
          description: ''
    put:
      operationId: proyectos_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this proyecto.
        required: true
      tags:
      - proyectos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Proyecto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Proyecto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Proyecto'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proyecto'
          description: ''
    patch:
      operationId: proyectos_partial_update
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this proyecto.
        required: true
      tags:
      - proyectos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProyecto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProyecto'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProyecto'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proyecto'
          description: ''
    delete:
      operationId: proyectos_destroy
      description: API endpoint that allows groups to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this proyecto.
        required: true
      tags:
      - proyectos
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/topic/:
    get:
      operationId: topic_list
      tags:
      - topic
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Topic'
          description: ''
    post:
      operationId: topic_create
      tags:
      - topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
  /api/v1/topic/{topic}/:
    get:
      operationId: topic_retrieve
      parameters:
      - in: path
        name: topic
        schema:
          type: string
        description: A unique value identifying this topic.
        required: true
      tags:
      - topic
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    put:
      operationId: topic_update
      parameters:
      - in: path
        name: topic
        schema:
          type: string
        description: A unique value identifying this topic.
        required: true
      tags:
      - topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Topic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Topic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Topic'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    patch:
      operationId: topic_partial_update
      parameters:
      - in: path
        name: topic
        schema:
          type: string
        description: A unique value identifying this topic.
        required: true
      tags:
      - topic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopic'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
    delete:
      operationId: topic_destroy
      parameters:
      - in: path
        name: topic
        schema:
          type: string
        description: A unique value identifying this topic.
        required: true
      tags:
      - topic
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/topicCategory/:
    get:
      operationId: topicCategory_list
      tags:
      - topicCategory
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopicCategory'
          description: ''
    post:
      operationId: topicCategory_create
      tags:
      - topicCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicCategory'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicCategory'
          description: ''
  /api/v1/topicCategory/{category}/:
    get:
      operationId: topicCategory_retrieve
      parameters:
      - in: path
        name: category
        schema:
          type: string
        description: A unique value identifying this topic category.
        required: true
      tags:
      - topicCategory
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicCategory'
          description: ''
    put:
      operationId: topicCategory_update
      parameters:
      - in: path
        name: category
        schema:
          type: string
        description: A unique value identifying this topic category.
        required: true
      tags:
      - topicCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicCategory'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicCategory'
          description: ''
    patch:
      operationId: topicCategory_partial_update
      parameters:
      - in: path
        name: category
        schema:
          type: string
        description: A unique value identifying this topic category.
        required: true
      tags:
      - topicCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTopicCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTopicCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTopicCategory'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicCategory'
          description: ''
    delete:
      operationId: topicCategory_destroy
      parameters:
      - in: path
        name: category
        schema:
          type: string
        description: A unique value identifying this topic category.
        required: true
      tags:
      - topicCategory
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/video/:
    get:
      operationId: video_list
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
          description: ''
    post:
      operationId: video_create
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v1/video/{id}/:
    get:
      operationId: video_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: video_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Video'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Video'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Video'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: video_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - video
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideo'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: video_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this video.
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/video/videos_by_channel/:
    get:
      operationId: video_videos_by_channel_retrieve
      parameters:
      - in: query
        name: channelid
        schema:
          type: string
        description: channel id
        required: true
      tags:
      - video
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v1/youtube-database/pull_channel_comments_to_database/:
    post:
      operationId: youtube_database_pull_channel_comments_to_database_create
      parameters:
      - in: query
        name: channelid
        schema:
          type: string
        description: channel id
        required: true
      tags:
      - youtube-database
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/youtube-database/pull_channel_to_database/:
    post:
      operationId: youtube_database_pull_channel_to_database_create
      parameters:
      - in: query
        name: channelid
        schema:
          type: string
        description: channel id
        required: true
      tags:
      - youtube-database
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/youtube-database/pull_video_comments_to_database/:
    post:
      operationId: youtube_database_pull_video_comments_to_database_create
      parameters:
      - in: query
        name: videoId
        schema:
          type: string
        description: video Id to pull comments
        required: true
      tags:
      - youtube-database
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/youtube/channel_download/:
    post:
      operationId: youtube_channel_download_create
      parameters:
      - in: query
        name: channelid
        schema:
          type: string
        description: channel id
        required: true
      tags:
      - youtube
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/v1/youtube/channel_playlist_download/:
    post:
      operationId: youtube_channel_playlist_download_create
      parameters:
      - in: query
        name: channelid
        schema:
          type: string
        description: channel id
        required: true
      tags:
      - youtube
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/youtube/channel_search/:
    post:
      operationId: youtube_channel_search_create
      parameters:
      - in: query
        name: query
        schema:
          type: string
        description: channel name to search
        required: true
      tags:
      - youtube
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/youtube/video_comments_download/:
    post:
      operationId: youtube_video_comments_download_create
      parameters:
      - in: query
        name: videoId
        schema:
          type: string
        description: video Id
        required: true
      tags:
      - youtube
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/youtube/video_details_download/:
    post:
      operationId: youtube_video_details_download_create
      parameters:
      - in: query
        name: videoId
        schema:
          type: array
          minItems: 1
          items:
            type: string
        description: list of video id's to download the details
        required: true
      tags:
      - youtube
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
components:
  schemas:
    Channel:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 50
        description:
          type: string
        publishedAt:
          type: string
          format: date-time
        defaultLanguage:
          type: string
          maxLength: 4
        country:
          type: string
          maxLength: 3
        thumbnail_default_url:
          type: string
          maxLength: 200
        thumbnail_high_url:
          type: string
          maxLength: 200
        viewCount:
          type: integer
        subscriberCount:
          type: integer
        hiddenSubscriberCount:
          type: boolean
        videoCount:
          type: integer
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        topicCategories:
          type: array
          items:
            $ref: '#/components/schemas/TopicCategory'
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/KeyWord'
        playlistId:
          type: string
          maxLength: 50
      required:
      - hiddenSubscriberCount
      - id
      - keywords
      - playlistId
      - publishedAt
      - thumbnail_default_url
      - thumbnail_high_url
      - title
      - topicCategories
      - topics
    Comment:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        videoId:
          type: string
        textOriginal:
          type: string
        authorChannelId:
          type: string
          maxLength: 50
        authorDisplayName:
          type: string
          maxLength: 50
        authorProfileImageUrl:
          type: string
          maxLength: 100
        authorChannelUrl:
          type: string
          maxLength: 100
        canRate:
          type: boolean
        viewerRating:
          type: string
          maxLength: 50
        likeCount:
          type: integer
        publishedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        canReply:
          type: boolean
        totalReplyCount:
          type: integer
        isPublic:
          type: boolean
      required:
      - authorChannelId
      - authorChannelUrl
      - authorDisplayName
      - authorProfileImageUrl
      - id
      - publishedAt
      - textOriginal
      - updatedAt
      - videoId
      - viewerRating
    KeyWord:
      type: object
      properties:
        keyword:
          type: string
      required:
      - keyword
    PatchedChannel:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 50
        description:
          type: string
        publishedAt:
          type: string
          format: date-time
        defaultLanguage:
          type: string
          maxLength: 4
        country:
          type: string
          maxLength: 3
        thumbnail_default_url:
          type: string
          maxLength: 200
        thumbnail_high_url:
          type: string
          maxLength: 200
        viewCount:
          type: integer
        subscriberCount:
          type: integer
        hiddenSubscriberCount:
          type: boolean
        videoCount:
          type: integer
        topics:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
        topicCategories:
          type: array
          items:
            $ref: '#/components/schemas/TopicCategory'
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/KeyWord'
        playlistId:
          type: string
          maxLength: 50
    PatchedComment:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        videoId:
          type: string
        textOriginal:
          type: string
        authorChannelId:
          type: string
          maxLength: 50
        authorDisplayName:
          type: string
          maxLength: 50
        authorProfileImageUrl:
          type: string
          maxLength: 100
        authorChannelUrl:
          type: string
          maxLength: 100
        canRate:
          type: boolean
        viewerRating:
          type: string
          maxLength: 50
        likeCount:
          type: integer
        publishedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        canReply:
          type: boolean
        totalReplyCount:
          type: integer
        isPublic:
          type: boolean
    PatchedKeyWord:
      type: object
      properties:
        keyword:
          type: string
    PatchedProyecto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 50
        url:
          type: string
          format: uri
          readOnly: true
        canal:
          type: string
        usuario:
          type: integer
    PatchedTopic:
      type: object
      properties:
        topic:
          type: string
    PatchedTopicCategory:
      type: object
      properties:
        category:
          type: string
    PatchedVideo:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 100
        description:
          type: string
        categoryId:
          type: string
          maxLength: 10
        defaultLanguage:
          type: string
          maxLength: 4
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        publishedAt:
          type: string
          format: date-time
        viewCount:
          type: integer
        likeCount:
          type: integer
        favouriteCount:
          type: integer
        commentCount:
          type: integer
        duration:
          type: string
          maxLength: 10
        definition:
          type: string
          maxLength: 4
        caption:
          type: string
          maxLength: 5
        channelId:
          type: string
          maxLength: 50
    Proyecto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 50
        url:
          type: string
          format: uri
          readOnly: true
        canal:
          type: string
        usuario:
          type: integer
      required:
      - canal
      - id
      - nombre
      - url
      - usuario
    Tag:
      type: object
      properties:
        tag:
          type: string
      required:
      - tag
    Topic:
      type: object
      properties:
        topic:
          type: string
      required:
      - topic
    TopicCategory:
      type: object
      properties:
        category:
          type: string
      required:
      - category
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        groups:
          type: array
          items:
            type: string
            format: uri
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - id
      - url
      - username
    Video:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 100
        description:
          type: string
        categoryId:
          type: string
          maxLength: 10
        defaultLanguage:
          type: string
          maxLength: 4
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        publishedAt:
          type: string
          format: date-time
        viewCount:
          type: integer
        likeCount:
          type: integer
        favouriteCount:
          type: integer
        commentCount:
          type: integer
        duration:
          type: string
          maxLength: 10
        definition:
          type: string
          maxLength: 4
        caption:
          type: string
          maxLength: 5
        channelId:
          type: string
          maxLength: 50
      required:
      - categoryId
      - channelId
      - id
      - publishedAt
      - tags
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
